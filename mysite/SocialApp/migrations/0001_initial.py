<<<<<<< HEAD
# Generated by Django 3.1.7 on 2021-03-03 13:36
=======
# Generated by Django 3.1.6 on 2021-03-05 06:44
>>>>>>> befa9e27d3d5e3c1f1449df0d317002f55f90a4e

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Post Category',
                'verbose_name_plural': 'Post Categories',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('host', models.CharField(default='localhost', editable=False, max_length=100)),
                ('display_name', models.CharField(max_length=100)),
                ('url', models.CharField(editable=False, max_length=200)),
                ('github', models.CharField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
<<<<<<< HEAD
                'verbose_name': 'Text Post',
                'verbose_name_plural': 'Text Posts',
=======
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
>>>>>>> befa9e27d3d5e3c1f1449df0d317002f55f90a4e
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('url', models.CharField(editable=False, max_length=200)),
                ('source', models.CharField(max_length=200)),
                ('origin', models.CharField(editable=False, max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('content_type', models.CharField(choices=[('text/plain', 'Plain Text'), ('text/markdown', 'Markdown'), ('application/base64', 'Base64 Encoding'), ('image/png;base64', 'PNG'), ('image/jpeg;base64', 'JPEG')], default='text/plain', max_length=20)),
                ('text_content', models.TextField(blank=True, default='')),
                ('image_content', models.ImageField(blank=True, null=True, upload_to='post_images')),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('FRIENDS', 'Friends')], default='PUBLIC', max_length=10)),
                ('unlisted', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(blank=True, to='SocialApp.PostCategory')),
            ],
<<<<<<< HEAD
            options={
                'verbose_name': 'Image Post',
                'verbose_name_plural': 'Image Posts',
            },
=======
>>>>>>> befa9e27d3d5e3c1f1449df0d317002f55f90a4e
        ),
        migrations.CreateModel(
            name='Followers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='to_author', to='SocialApp.author')),
                ('followers', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='from_author', to='SocialApp.author')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('content_type', models.CharField(choices=[('text/plain', 'Plain Text'), ('text/markdown', 'Markdown')], default='text/plain', max_length=20)),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(editable=False, max_length=200)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SocialApp.post')),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='followers',
            field=models.ManyToManyField(related_name='followed_by', through='SocialApp.Followers', to='SocialApp.Author'),
        ),
    ]
